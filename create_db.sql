-- MySQL Script generated by MySQL Workbench
-- Mon May 15 11:59:18 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema locMNS
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema locMNS
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `locMNS` DEFAULT CHARACTER SET utf8 ;
USE `locMNS` ;

-- -----------------------------------------------------
-- Table `locMNS`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`status` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `lastname` VARCHAR(45) NOT NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(70) NOT NULL,
  `password` VARCHAR(50) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `sexe` VARCHAR(45) NOT NULL,
  `affiliation` VARCHAR(45) BINARY NOT NULL,
  `phoneNumber` DECIMAL(10) NOT NULL,
  `statutId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `password_UNIQUE` (`password` ASC) VISIBLE,
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) VISIBLE,
  UNIQUE INDEX `phoneNumber_UNIQUE` (`phoneNumber` ASC) VISIBLE,
  INDEX `fk_utilisateur_statut_idx` (`statutId` ASC) VISIBLE,
  CONSTRAINT `fk_utilisateur_statut`
    FOREIGN KEY (`statutId`)
    REFERENCES `locMNS`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`location` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `askingDateLocation` DATE NOT NULL,
  `reasonLocation` VARCHAR(500) NOT NULL,
  `previsionnalEndDateLocation` DATE NOT NULL,
  `previsionnalStartingDateLocation` DATE NOT NULL,
  `extentionDate` DATE NOT NULL,
  `extentionDateValidation` DATE NOT NULL,
  `extensionDuration` DATE NOT NULL,
  `decision` VARCHAR(45) BINARY NOT NULL,
  `date_decision` DATE NOT NULL,
  `userId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_location_utilisateur_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `fk_location_utilisateur`
    FOREIGN KEY (`userId`)
    REFERENCES `locMNS`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`storageArea`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`storageArea` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nameStorageArea` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`category` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nameCategory` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`brand`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`brand` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nameBrand` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `matricule_materiel_UNIQUE` (`nameBrand` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`model`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`model` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nameModel` VARCHAR(100) NOT NULL,
  `brandId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `matricule_materiel_UNIQUE` (`nameModel` ASC) VISIBLE,
  INDEX `fk_model_brand_idx` (`brandId` ASC) VISIBLE,
  CONSTRAINT `fk_model_brand`
    FOREIGN KEY (`brandId`)
    REFERENCES `locMNS`.`brand` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`documentation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`documentation` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descriptionDocumentation` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`material`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`material` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `registrationNumberMaterial` DECIMAL(10) NOT NULL,
  `storageAreaId` INT UNSIGNED NOT NULL,
  `categoryId` INT UNSIGNED NOT NULL,
  `modelId` INT UNSIGNED NOT NULL,
  `documentationId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `matricule_materiel_UNIQUE` (`registrationNumberMaterial` ASC) VISIBLE,
  INDEX `fk_material_storageArea_idx` (`storageAreaId` ASC) VISIBLE,
  INDEX `fk_material_category_idx` (`categoryId` ASC) VISIBLE,
  INDEX `fk_material_model_idx` (`modelId` ASC) VISIBLE,
  INDEX `fk_material_documentation_idx` (`documentationId` ASC) VISIBLE,
  CONSTRAINT `fk_material_storageArea`
    FOREIGN KEY (`storageAreaId`)
    REFERENCES `locMNS`.`storageArea` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_category`
    FOREIGN KEY (`categoryId`)
    REFERENCES `locMNS`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_model`
    FOREIGN KEY (`modelId`)
    REFERENCES `locMNS`.`model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_documentation`
    FOREIGN KEY (`documentationId`)
    REFERENCES `locMNS`.`documentation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`state`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`state` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nameState` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`location_material`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`location_material` (
  `locationId` INT UNSIGNED NOT NULL,
  `materialId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`locationId`, `materialId`),
  INDEX `fk_location_materiel_materiel_idx` (`materialId` ASC) VISIBLE,
  CONSTRAINT `fk_location_materiel_location`
    FOREIGN KEY (`locationId`)
    REFERENCES `locMNS`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_location_materiel_materiel`
    FOREIGN KEY (`materialId`)
    REFERENCES `locMNS`.`material` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locMNS`.`material_state`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `locMNS`.`material_state` (
  `materialId` INT UNSIGNED NOT NULL,
  `stateId` INT UNSIGNED NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`materialId`, `stateId`),
  INDEX `fk_material_state_state_idx` (`stateId` ASC) VISIBLE,
  CONSTRAINT `fk_material_state_material`
    FOREIGN KEY (`materialId`)
    REFERENCES `locMNS`.`material` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_state_state`
    FOREIGN KEY (`stateId`)
    REFERENCES `locMNS`.`state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
